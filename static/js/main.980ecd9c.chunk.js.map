{"version":3,"sources":["assets/images/album.jpg","components/Switch.js","components/Label.js","components/Artwork.js","components/Player.js","components/Weather.js","components/Playlist.js","components/RadioPlayerUpper.js","components/RadioPlayerLower.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Switch","_ref","isToggled","onToggle","react_default","a","createElement","className","id","type","checked","onChange","htmlFor","Label","_useState","useState","_useState2","Object","slicedToArray","audioData","setAudioData","useEffect","fetch","concat","then","response","json","playlist","channel","name","Artwork","search","images","setimages","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","interval","setInterval","catch","interval2","clearInterval","alt","src","coverImage","style","animationPlayState","JSON","stringify","urls","full","Player","isHidden","_player$current","_player$current2","setIsHidden","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","player","useRef","progressBar","animationRef","seconds","Math","floor","current","max","loadedmetadata","readyState","whilePlaying","value","changePlayerCurrentTime","requestAnimationFrame","changeRange","setProperty","ref","preload","secs","minutes","returnedMinutes","returnedSeconds","calculateTime","defaultValue","onClick","Number","index_esm","prevValue","pause","cancelAnimationFrame","play","fa_index_esm","bs_index_esm","Weather","location","weatherData","setWeatherData","weather","icon","round","main","temp","Playlist","id3","channelData","setChannelData","song","title","artist","RadioPlayerUpper","RadioPlayerLower","id2","audioDataSong","setAudioDataSong","Fragment","aria-label","App","setIsToggled","components_Switch","components_Player","Playlist_Playlist","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.980ecd9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/album.9742a7fc.jpg\";","import React from \"react\"\nimport \"../styles/main.css\"\n\nconst Switch = ({ isToggled, onToggle }) => {\n    return (\n        <div className='dark-light'>\n            <div className='dark-light__switch'>\n                <div className='switch'>\n                    <div className='switch__2'>\n                        <input\n                            id='switch-2'\n                            type='checkbox'\n                            checked={isToggled}\n                            onChange={onToggle}\n                        />\n                        <label htmlFor='switch-2'></label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Switch\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/main.css\"\n\nexport default function Label({ id }) {\n    const [audioData, setAudioData] = useState(null)\n\n    useEffect(() => {\n        fetch(\n            `https://api.sr.se/api/v2/playlists/rightnow?format=json&indent=true&channelid=${id}`,\n        )\n            .then(response => response.json())\n            .then(setAudioData)\n    }, [id])\n\n    if (audioData) {\n        return (\n            <span className='currently-playing-label'>\n                {audioData.playlist.channel.name}\n            </span>\n        )\n    }\n    return <div>No Audio Data</div>\n}\n\n// {\n/* <div className='songDetails'>\n<br></br>\n<span className='currently-playing-artist-previous'>\n\tPrev\n</span>\n<span className='currently-playing-artist'>\n\tARTIST\n</span>\n<span className='currently-playing-artist-next'>\n\tNext\n</span>\n</div>\n\n<div id='album-container'>\n<div className='album__holder'></div>\n<div className='dot'></div>\n</div>\n\n<div className='weather-container'>\n<div className='weather'>\n\t<div className='weather__Icon'></div>\n\t<p className='weather__location'></p>\n\t<p className='weather__temperature'></p>\n</div>\n</div>\n\n<div\nclassName='currently-playing'\naria-label='Currently playing'>\n<span className='currently-playing-song-previous'>\n\tPrev\n</span>\n<span className='currently-playing-song'>\n\tSONG\n</span>\n<span className='currently-playing-song-next'>\n\tNext\n</span>\n</div>\n\n<div className='volume-controls'>\n<button\n\tname='mute'\n\tclassName='button mute-button'\n\taria-label='Mute/unmute'>\n\t<i\n\t\tclassName='fas fa-volume-down'\n\t\taria-hidden></i>\n</button>\n<input\n\ttype='range'\n\tname='volume'\n\tclassName='volume'\n\tmin='0'\n\tmax='1'\n\tstep='0.05'\n\tvalue='0.2'\n\taria-label='Volume'\n/>\n</div>\n\n<div className='circle-container'>\n<button className='button play-pause-button'></button>\n<div className='circle'>\n\t<span className='circle__btn shadow'>\n\t\t<audio\n\t\t\tsrc='http://sverigesradio.se/topsy/direkt/srapi/164.mp3'\n\t\t\tid='stream'></audio>\n\t\t<ion-icon\n\t\t\tclassName='pause visibility'\n\t\t\tname='pause'></ion-icon>\n\t\t<ion-icon\n\t\t\tclassName='play visibility'\n\t\t\tname='play'></ion-icon>\n\t</span>\n\t<span className='circle__back-1 paused'></span>\n\t<span className='circle__back-2 paused'></span>\n</div>\n</div> */\n// }\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/main.css\"\nimport coverImage from \"../assets/images/album.jpg\"\n\nexport default function Artwork({ search }) {\n    const [images, setimages] = useState(null)\n    const [loading, setLoading] = useState(null)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        if (!search) return\n        setLoading(true)\n        const interval = setInterval(() => {\n            fetch(\n                `https://apis.scrimba.com/unsplash/photos/random?orientation=landscape&query=${search}`,\n            )\n                .then(response => response.json())\n                .then(setimages)\n                .then(() => setLoading(false))\n                .catch(setError)\n        }, 30000)\n\n        const interval2 = setInterval(() => {\n            fetch(\n                `https://apis.scrimba.com/unsplash/photos/random?orientation=landscape&query=${search}`,\n            )\n                .then(response => response.json())\n                .then(setimages)\n                .then(() => setLoading(false))\n                .catch(setError)\n            clearInterval(interval2)\n        }, 4000)\n\n        return () => clearInterval(interval)\n    }, [search])\n\n    if (loading)\n        return (\n            <div className='album-container'>\n                <img\n                    alt={\"albumCover\"}\n                    src={coverImage}\n                    style={{ animationPlayState: \"paused\" }}\n                />\n                <div className='dot'></div>\n            </div>\n        )\n    if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>\n    if (!images) return null\n\n    return (\n        <div className='album-container'>\n            <img alt={\"albumsearch\"} src={images.urls.full} />\n            <div className='dot'></div>\n        </div>\n    )\n}\n","import React, { useState, useRef, useEffect } from \"react\"\nimport \"../styles/main.css\"\nimport \"../styles/player.css\"\nimport \"../styles/Playlist.css\"\nimport \"../components/Artwork\"\nimport { SiTimescale } from \"react-icons/si\"\nimport { BsFillMusicPlayerFill } from \"react-icons/bs\"\nimport { FaPlay } from \"react-icons/fa\"\nimport { FaPause } from \"react-icons/fa\"\n\nconst Player = ({ isHidden, setIsHidden }) => {\n    // state\n    const [isPlaying, setIsPlaying] = useState(false)\n    const [duration, setDuration] = useState(0)\n    const [currentTime, setCurrentTime] = useState(0)\n\n    // references\n    const player = useRef() // reference our audio component\n    const progressBar = useRef() // reference our progress bar\n    const animationRef = useRef() // reference the animation\n\n    useEffect(() => {\n        const seconds = Math.floor(player.current.duration)\n        setDuration(seconds)\n        progressBar.current.max = seconds\n    }, [player?.current?.loadedmetadata, player?.current?.readyState])\n\n    const calculateTime = secs => {\n        const minutes = Math.floor(secs / 60)\n        const returnedMinutes =\n            minutes < 10 ? `0${minutes}` : `${minutes}`\n        const seconds = Math.floor(secs % 60)\n        const returnedSeconds =\n            seconds < 10 ? `0${seconds}` : `${seconds}`\n        return `${returnedMinutes}:${returnedSeconds}`\n    }\n\n    const togglePlayPause = () => {\n        const prevValue = isPlaying\n        setIsPlaying(!prevValue)\n        if (!prevValue) {\n            player.current.play()\n            animationRef.current = requestAnimationFrame(whilePlaying)\n        } else {\n            player.current.pause()\n            cancelAnimationFrame(animationRef.current)\n        }\n    }\n\n    const whilePlaying = () => {\n        progressBar.current.value = player.current.currentTime\n        changePlayerCurrentTime()\n        animationRef.current = requestAnimationFrame(whilePlaying)\n    }\n\n    const changeRange = () => {\n        player.current.currentTime = progressBar.current.value\n        changePlayerCurrentTime()\n    }\n\n    const changePlayerCurrentTime = () => {\n        progressBar.current.style.setProperty(\n            \"--seek-before-width\",\n            `${(progressBar.current.value / duration) * 90}%`,\n        )\n        setCurrentTime(progressBar.current.value)\n    }\n\n    const backThirty = () => {\n        progressBar.current.value = Number(\n            progressBar.current.value - 10,\n        )\n        changeRange()\n    }\n\n    return (\n        <div className={\"player\"}>\n            <audio\n                ref={player}\n                src='https://sverigesradio.se/topsy/direkt/srapi/164.mp3'\n                preload='metadata'></audio>\n\n            <div className={\"playerContainer\"}>\n                {/* current time */}\n                <div className={\"currentTime\"}>\n                    {calculateTime(currentTime)}\n                </div>\n\n                {/* progress bar */}\n                <div>\n                    <input\n                        type='range'\n                        className={\"progressBar\"}\n                        defaultValue='0'\n                        ref={progressBar}\n                        onChange={changeRange}\n                    />\n                </div>\n\n                {/* duration */}\n                <div className={\"duration\"}>Infinity:🚀</div>\n            </div>\n\n            <div className={\"buttonContainer\"}>\n                <button\n                    className={\"forwardBackward\"}\n                    onClick={backThirty}>\n                    <SiTimescale />\n                </button>\n                <button\n                    onClick={togglePlayPause}\n                    className={\"playPause\"}>\n                    {isPlaying ? (\n                        <FaPause />\n                    ) : (\n                        <FaPlay className={\"play\"} />\n                    )}\n                </button>\n                <button\n                    className={\"forwardBackward\"}\n                    onClick={setIsHidden}>\n                    <BsFillMusicPlayerFill />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/main.css\"\n\nexport default function Weather({ location }) {\n    const [weatherData, setWeatherData] = useState(null)\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            fetch(\n                `https://apis.scrimba.com/openweathermap/data/2.5/weather?q=${location}&units=metric`,\n            )\n                .then(response => response.json())\n                .then(setWeatherData)\n        }, 4000)\n        return () => clearInterval(interval)\n    }, [location])\n\n    if (weatherData) {\n        return (\n            <div className='weather-container'>\n                <div className='weather'>\n                    <img\n                        alt={\"weatherIcon\"}\n                        className='weather__Icon'\n                        src={`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\n                    />\n                    <p className='weather__location'>\n                        {weatherData.name}\n                    </p>\n                    <p className='weather__temperature'>\n                        {Math.round(weatherData.main.temp)}º\n                    </p>\n                </div>\n            </div>\n        )\n    }\n    return <div className='intern'> Intern checking weather</div>\n}\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/main.css\"\nimport \"../styles/Playlist.css\"\n\nexport default function Playlist({ id3 }) {\n    const [channelData, setChannelData] = useState(null)\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            fetch(\n                `https://api.sr.se/api/v2/playlists/getplaylistbychannelid?id=${id3}&format=json`,\n            )\n                .then(response => response.json())\n                .then(setChannelData)\n        }, 1000)\n        return () => clearInterval(interval)\n    }, [id3])\n\n    if (!channelData) return null\n    if (channelData) {\n        return (\n            <div className='playlist'>\n                <div className='playlistItemContainer'>\n                    <div className='playlistItem'>\n                        <span>1</span>\n                        <div className='playlistItem-detail'>\n                            <span>Song: </span>\n                            {channelData.song[0].title}\n                        </div>\n                        <div className='playlistItem-detail'>\n                            <span>Artist: </span>\n                            {channelData.song[0].artist}\n                        </div>\n                        <hr className='hr'></hr>\n                    </div>\n                    <div className='playlistItem'>\n                        <span>2</span>\n                        <div className='playlistItem-detail'>\n                            <span>Song: </span>\n                            {channelData.song[1].title}\n                        </div>\n                        <div className='playlistItem-detail'>\n                            <span>Artist: </span>\n                            {channelData.song[1].artist}\n                        </div>\n                        <hr className='hr'></hr>\n                    </div>\n                    <div className='playlistItem'>\n                        <span>3</span>\n                        <div className='playlistItem-detail'>\n                            <span>Song: </span>\n                            {channelData.song[2].title}\n                        </div>\n                        <div className='playlistItem-detail'>\n                            <span>Artist: </span>\n                            {channelData.song[2].artist}\n                        </div>\n                        <hr className='hr'></hr>\n                    </div>\n                    <div className='playlistItem'>\n                        <span>4</span>\n                        <div className='playlistItem-detail'>\n                            <span>Song: </span>\n                            {channelData.song[3].title}\n                        </div>\n                        <div className='playlistItem-detail'>\n                            <span>Artist: </span>\n                            {channelData.song[3].artist}\n                        </div>\n                        <hr className='hr'></hr>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return <div></div>\n}\n\n// export default function Playlist({ id3 }) {\n//     const [channelData, setChannelData] = useState(null)\n\n//     useEffect(() => {\n//         const interval = setInterval(() => {\n//             fetch(\n//                 `https://api.sr.se/api/v2/playlists/getplaylistbychannelid?id=${id3}&format=json`,\n//             )\n//                 .then(response => response.json())\n//                 .then(setChannelData)\n//         }, 1000)\n//         return () => clearInterval(interval)\n//     }, [id3])\n\n//     if (channelData) {\n//         return (\n//             <div className='playlist'>\n//                 {this.state.channelData.map(channel => (\n//                     <div>\n//                         <div>{channel.song.title}</div>\n//                         <div>{channel.song.artist}</div>\n//                     </div>\n//                 ))}\n//                 <div>{JSON.stringify(channelData)}</div>\n//             </div>\n//         )\n//     }\n//     return <div>hello</div>\n// }\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/main.css\"\n\nexport default function RadioPlayerUpper({ id }) {\n    const [audioData, setAudioData] = useState(null)\n    const [loading, setLoading] = useState(null)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        if (!id) return\n        setLoading(true)\n        const interval = setInterval(() => {\n            fetch(\n                `https://api.sr.se/api/v2/playlists/getplaylistbychannelid?id=${id}&format=json`,\n            )\n                .then(response => response.json())\n                .then(setAudioData)\n                .then(() => setLoading(false))\n                .catch(setError)\n            // console.log(\"Quick little check for Artist data\")\n        }, 4000)\n        return () => clearInterval(interval)\n    }, [id])\n\n    if (loading)\n        return (\n            <div className='songDetails'>\n                <br></br>\n                <span className='currently-playing-artist-previous'>\n                    PREV\n                </span>\n                <span className='currently-playing-artist'>\n                    ARTIST\n                </span>\n                <span className='currently-playing-artist-next'>\n                    NEXT\n                </span>\n            </div>\n        )\n    if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>\n    if (!id) return null\n\n    if (!audioData) return null\n    if (audioData) {\n        return (\n            <div className='songDetails'>\n                <br></br>\n                <span className='currently-playing-artist-previous'>\n                    {audioData.song[1].artist}\n                </span>\n                <span className='currently-playing-artist'>\n                    {audioData.song[0].artist}\n                </span>\n                <span className='currently-playing-artist-next'>\n                    {audioData.song[2].artist}\n                </span>\n            </div>\n        )\n    }\n    return <div></div>\n}\n","import React, { useState, useEffect } from \"react\"\nimport \"../styles/main.css\"\n\nexport default function RadioPlayerLower({ id2 }) {\n    const [audioDataSong, setAudioDataSong] = useState(null)\n    const [loading, setLoading] = useState(null)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        if (!id2) return\n        setLoading(true)\n        const interval = setInterval(() => {\n            fetch(\n                `https://api.sr.se/api/v2/playlists/getplaylistbychannelid?id=${id2}&format=json`,\n            )\n                .then(response => response.json())\n                .then(setAudioDataSong)\n                .then(() => setLoading(false))\n                .catch(setError)\n            // console.log(\"Cheeky gander for Song data\")\n        }, 4000)\n        return () => clearInterval(interval)\n    }, [id2])\n    if (loading)\n        return (\n            <div className='songDetails'>\n                <br></br>\n                <span className='currently-playing-song-previous'>\n                    PREV\n                </span>\n                <span className='currently-playing-song'>SONG</span>\n                <span className='currently-playing-song-next'>\n                    NEXT\n                </span>\n            </div>\n        )\n    if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>\n    if (!id2) return null\n\n    if (!audioDataSong) return null\n    if (audioDataSong) {\n        return (\n            <>\n                <div\n                    className='currently-playing'\n                    aria-label='Currently playing'>\n                    <span className='currently-playing-song-previous'>\n                        {audioDataSong.song[1].title}\n                    </span>\n                    <span className='currently-playing-song'>\n                        {audioDataSong.song[0].title\n                            ? audioDataSong.song[0].title\n                            : \"DJ TALKING\"}\n                    </span>\n                    <span className='currently-playing-song-next'>\n                        {audioDataSong.song[2].title}\n                    </span>\n                </div>\n            </>\n        )\n    }\n    return <div></div>\n}\n\n// {\n/* <div className='songDetails'>\n<br></br>\n<span className='currently-playing-artist-previous'>\n\tPrev\n</span>\n<span className='currently-playing-artist'>\n\tARTIST\n</span>\n<span className='currently-playing-artist-next'>\n\tNext\n</span>\n</div>\n\n<div id='album-container'>\n<div className='album__holder'></div>\n<div className='dot'></div>\n</div>\n\n<div className='weather-container'>\n<div className='weather'>\n\t<div className='weather__Icon'></div>\n\t<p className='weather__location'></p>\n\t<p className='weather__temperature'></p>\n</div>\n</div>\n\n<div\nclassName='currently-playing'\naria-label='Currently playing'>\n<span className='currently-playing-song-previous'>\n\tPrev\n</span>\n<span className='currently-playing-song'>\n\tSONG\n</span>\n<span className='currently-playing-song-next'>\n\tNext\n</span>\n</div>\n\n<div className='volume-controls'>\n<button\n\tname='mute'\n\tclassName='button mute-button'\n\taria-label='Mute/unmute'>\n\t<i\n\t\tclassName='fas fa-volume-down'\n\t\taria-hidden></i>\n</button>\n<input\n\ttype='range'\n\tname='volume'\n\tclassName='volume'\n\tmin='0'\n\tmax='1'\n\tstep='0.05'\n\tvalue='0.2'\n\taria-label='Volume'\n/>\n</div>\n\n<div className='circle-container'>\n<button className='button play-pause-button'></button>\n<div className='circle'>\n\t<span className='circle__btn shadow'>\n\t\t<audio\n\t\t\tsrc='http://sverigesradio.se/topsy/direkt/srapi/164.mp3'\n\t\t\tid='stream'></audio>\n\t\t<ion-icon\n\t\t\tclassName='pause visibility'\n\t\t\tname='pause'></ion-icon>\n\t\t<ion-icon\n\t\t\tclassName='play visibility'\n\t\t\tname='play'></ion-icon>\n\t</span>\n\t<span className='circle__back-1 paused'></span>\n\t<span className='circle__back-2 paused'></span>\n</div>\n</div> */\n// }\n","import React, { useState } from \"react\"\nimport \"./styles/main.css\"\nimport \"./styles/Playlist.css\"\nimport Switch from \"./components/Switch\"\nimport Label from \"./components/Label\"\nimport Artwork from \"./components/Artwork\"\nimport Player from \"./components/Player\"\nimport Weather from \"./components/Weather\"\nimport Playlist from \"./components/Playlist\"\nimport RadioPlayerUpper from \"./components/RadioPlayerUpper\"\nimport RadioPlayerLower from \"./components/RadioPlayerLower\"\n\nfunction App() {\n    const [isToggled, setIsToggled] = useState(false)\n    const [isHidden, setIsHidden] = useState(true)\n    return (\n        <div className='App'>\n            <div className={isToggled ? \"dark\" : \"light\"}>\n                <main>\n                    <div className='container'>\n                        <Switch\n                            isToggled={isToggled}\n                            onToggle={() => setIsToggled(!isToggled)}\n                        />\n                        <Label id='164' />\n                        <RadioPlayerUpper id='164' />\n                        <Artwork search='band' />\n                        <Weather location='Bagarmossen' />\n                        <RadioPlayerLower id2='164' />\n                        <Player\n                            isHidden={isHidden}\n                            setIsHidden={() => setIsHidden(!isHidden)}\n                        />\n                    </div>\n                    <div className={isHidden ? \"hidden\" : \"\"}>\n                        <Playlist id3='164' />\n                    </div>\n                </main>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/globals.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n)\n"],"sourceRoot":""}